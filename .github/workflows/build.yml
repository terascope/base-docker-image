name: build
run-name: ${{ github.actor }} has triggered a build of the Terascope Base Image

on:
  push:
    branches:
      - '*'
      - '!master'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/node-base
      
jobs:
  build_matrix:
    strategy:
      matrix:
        # NOTE: These versions must be kept in sync with the release.yml
        version: ["22"]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/arm64,linux/amd64
      -
        name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64,linux/amd64
          build-args: "NODE_VERSION=${{ matrix.version }}"
          pull: true
          push: true
          file: ./Dockerfile
          tags: "${{ env.IMAGE_NAME }}:${{ matrix.version }}-test"
          cache-to: 
      -
        name: Grab Current Version
        id: current_version
        run: echo "::set-output name=current_node_version::$(docker run ${{ env.IMAGE_NAME }}:${{ matrix.version }}-test node -v)"
        # run: echo "CURRENT_NODE_VERSION=$(docker run ${{ env.IMAGE_NAME }}:${{ matrix.version }}-test node -v)" >> $GITHUB_ENV
      -
        name: Grab Minor Version
        id: minor_version
        # run: echo "MINOR=$(node extract-semver.js ${{ env.CURRENT_NODE_VERSION }} minor)" >> $GITHUB_ENV
        run: |
          echo "::set-output name=minor::$(node extract-semver.js ${{ steps.current_version.outputs.current_node_version }} minor)"

      -
        name: Grab Patch Version
        id: patch_version
        # run: echo "PATCH=$(node extract-semver.js ${{ env.CURRENT_NODE_VERSION }} patch)" >> $GITHUB_ENV
        run: |
          echo "::set-output name=patch::$(node extract-semver.js ${{ steps.current_version.outputs.current_node_version }} patch)"

      - 
        name: Retag, and push image
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ matrix.version }}-test ${{ env.IMAGE_NAME }}:${{ matrix.version }}.${{ steps.minor_version.outputs.minor }}-test
          docker push ${{ env.IMAGE_NAME }}:${{ matrix.version }}.${{ steps.minor_version.outputs.minor }}-test
          docker tag ${{ env.IMAGE_NAME }}:${{ matrix.version }}-test ${{ env.IMAGE_NAME }}:${{ matrix.version }}.${{ steps.minor_version.outputs.minor }}.${{ steps.patch_version.outputs.patch }}-test
          docker push ${{ env.IMAGE_NAME }}:${{ matrix.version }}.${{ steps.minor_version.outputs.minor }}.${{ steps.patch_version.outputs.patch }}-test
      -
        name: Build Core
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64,linux/amd64
          build-args: "NODE_VERSION=${{ matrix.version }}"
          pull: true
          push: true
          file: ./Dockerfile.core
          tags: | 
            "${{ env.IMAGE_NAME }}:${{ matrix.version }}-core-test"
            "${{ env.IMAGE_NAME }}:${{ matrix.version }}.${{ steps.minor_version.outputs.minor }}-core-test"
            "${{ env.IMAGE_NAME }}:${{ matrix.version }}.${{ steps.minor_version.outputs.minor }}.${{ steps.patch_version.outputs.patch }}-core-test"
